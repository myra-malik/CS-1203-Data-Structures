#include <stdio.h>
#include <stdlib.h>

//structure for a queue node
struct QueueNode {
    int data;
    struct QueueNode* next;
};

//structure for the queue
struct Queue {
    struct QueueNode* front;
    struct QueueNode* rear;
};

//function to create an empty queue
struct Queue* createQueue() {
    struct Queue* queue = (struct Queue*)malloc(sizeof(struct Queue));
    if (queue == NULL) {
        perror("error");
        exit(EXIT_FAILURE);
    }
    queue->front = queue->rear = NULL;
    return queue;
}

//function to add an element into the queue
void insert_queue(struct Queue* queue, int data) {
    struct QueueNode* newNode = (struct QueueNode*)malloc(sizeof(struct QueueNode));
    if (newNode == NULL) {
        perror("error");
        exit(EXIT_FAILURE);
    }
    newNode->data = data;
    newNode->next = NULL;
    
    if (queue->rear == NULL) {
        queue->front = queue->rear = newNode;
    } else {
        queue->rear->next = newNode;
        queue->rear = newNode;
    }
}

//function to delete an element from the queue
int delete_queue(struct Queue* queue) {
    if (queue->front == NULL) {
        printf("Queue is empty.\n");
        return -1;
    }
    
    struct QueueNode* temp = queue->front;
    int data = temp->data;
    
    queue->front = queue->front->next;
    
    if (queue->front == NULL) {
        queue->rear = NULL;
    }
    
    free(temp);
    return data;
}

//function to print the queue
void print_queue(struct Queue* queue) {
    if (queue->front == NULL) {
        printf("Queue is empty.\n");
        return;
    }
    
    struct QueueNode* current = queue->front;
    printf("Queue: ");
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    struct Queue* queue = createQueue();
    int choice, data;

    while (1) { //menu for user to make choice of operation
        printf("\nMenu:\n");
        printf("1. Insert element\n");
        printf("2. Delete element\n");
        printf("3. Print queue\n");
        printf("4. Exit\n");
        printf("Enter your choice of operation: ");
        scanf("%d", &choice);

        switch (choice) { //to invoke function user wants to call
            case 1:
                printf("Enter element to insert: ");
                scanf("%d", &data);
                insert_queue(queue, data);
                break;
            case 2:
                data = delete_queue(queue);
                if (data != -1) {
                    printf("Deleted element: %d\n", data);
                }
                break;
            case 3:
                print_queue(queue);
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid, try again.\n");
        }
    }

    return 0;
}
